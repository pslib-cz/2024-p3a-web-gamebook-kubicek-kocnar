// <auto-generated />
using KubicekKocnar.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KubicekKocnar.Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("KubicekKocnar.Server.Models.Block", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("attributes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("texture0Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("texture1Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("texture2Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("texture3Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("texture4Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("texture5Id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("texture0Id");

                    b.HasIndex("texture1Id");

                    b.HasIndex("texture2Id");

                    b.HasIndex("texture3Id");

                    b.HasIndex("texture4Id");

                    b.HasIndex("texture5Id");

                    b.ToTable("Blocks");
                });

            modelBuilder.Entity("KubicekKocnar.Server.Models.Feature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<int>("X")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Y")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Z")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Features");
                });

            modelBuilder.Entity("KubicekKocnar.Server.Models.FeatureParams", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FeatureId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FeatureId");

                    b.ToTable("FeatureParams");
                });

            modelBuilder.Entity("KubicekKocnar.Server.Models.Level", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("NextLevelId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("NextLevelId");

                    b.ToTable("Levels");
                });

            modelBuilder.Entity("KubicekKocnar.Server.Models.Light", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("LevelId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("X")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Y")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Z")
                        .HasColumnType("INTEGER");

                    b.Property<string>("color")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("intensity")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("LevelId");

                    b.ToTable("Lights");
                });

            modelBuilder.Entity("KubicekKocnar.Server.Models.PlacedBlock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BlockId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("LevelId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("X")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Y")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Z")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BlockId");

                    b.HasIndex("LevelId");

                    b.ToTable("PlacedBlocks");
                });

            modelBuilder.Entity("KubicekKocnar.Server.Models.Texture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("src")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.HasKey("Id");

                    b.ToTable("Textures");
                });

            modelBuilder.Entity("KubicekKocnar.Server.Models.Block", b =>
                {
                    b.HasOne("KubicekKocnar.Server.Models.Texture", "texture0")
                        .WithMany()
                        .HasForeignKey("texture0Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KubicekKocnar.Server.Models.Texture", "texture1")
                        .WithMany()
                        .HasForeignKey("texture1Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KubicekKocnar.Server.Models.Texture", "texture2")
                        .WithMany()
                        .HasForeignKey("texture2Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KubicekKocnar.Server.Models.Texture", "texture3")
                        .WithMany()
                        .HasForeignKey("texture3Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KubicekKocnar.Server.Models.Texture", "texture4")
                        .WithMany()
                        .HasForeignKey("texture4Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KubicekKocnar.Server.Models.Texture", "texture5")
                        .WithMany()
                        .HasForeignKey("texture5Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("texture0");

                    b.Navigation("texture1");

                    b.Navigation("texture2");

                    b.Navigation("texture3");

                    b.Navigation("texture4");

                    b.Navigation("texture5");
                });

            modelBuilder.Entity("KubicekKocnar.Server.Models.FeatureParams", b =>
                {
                    b.HasOne("KubicekKocnar.Server.Models.Feature", null)
                        .WithMany("params_")
                        .HasForeignKey("FeatureId");
                });

            modelBuilder.Entity("KubicekKocnar.Server.Models.Level", b =>
                {
                    b.HasOne("KubicekKocnar.Server.Models.Level", "NextLevel")
                        .WithMany()
                        .HasForeignKey("NextLevelId");

                    b.Navigation("NextLevel");
                });

            modelBuilder.Entity("KubicekKocnar.Server.Models.Light", b =>
                {
                    b.HasOne("KubicekKocnar.Server.Models.Level", null)
                        .WithMany("Lights")
                        .HasForeignKey("LevelId");
                });

            modelBuilder.Entity("KubicekKocnar.Server.Models.PlacedBlock", b =>
                {
                    b.HasOne("KubicekKocnar.Server.Models.Block", "Block")
                        .WithMany()
                        .HasForeignKey("BlockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KubicekKocnar.Server.Models.Level", null)
                        .WithMany("Blocks")
                        .HasForeignKey("LevelId");

                    b.Navigation("Block");
                });

            modelBuilder.Entity("KubicekKocnar.Server.Models.Feature", b =>
                {
                    b.Navigation("params_");
                });

            modelBuilder.Entity("KubicekKocnar.Server.Models.Level", b =>
                {
                    b.Navigation("Blocks");

                    b.Navigation("Lights");
                });
#pragma warning restore 612, 618
        }
    }
}
